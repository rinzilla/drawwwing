// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
const tg = window.Telegram.WebApp;
tg.expand(); // –†–∞—Å–∫—Ä—ã–≤–∞–µ–º –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Canvas
const canvas = document.getElementById("canvas");
const ctx = canvas.getContext("2d");

// –ü–æ–¥–≥–æ–Ω—è–µ–º —Ä–∞–∑–º–µ—Ä Canvas –ø–æ–¥ —ç–∫—Ä–∞–Ω
function resizeCanvas() {
  canvas.width = window.innerWidth * 0.9;
  canvas.height = window.innerHeight * 0.7;
}
resizeCanvas();
window.addEventListener("resize", resizeCanvas);

// –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ä–∏—Å–æ–≤–∞–Ω–∏—è
let isDrawing = false;
let lastX = 0;
let lastY = 0;

// –¶–≤–µ—Ç –∏ —Ç–æ–ª—â–∏–Ω–∞ –∫–∏—Å—Ç–∏
ctx.strokeStyle = "#000000";
ctx.lineWidth = 4;
ctx.lineCap = "round";

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π (–¥–ª—è –º—ã—à–∏ –∏ –∫–∞—Å–∞–Ω–∏–π)
canvas.addEventListener("mousedown", startDrawing);
canvas.addEventListener("touchstart", handleTouchStart);
canvas.addEventListener("mousemove", draw);
canvas.addEventListener("touchmove", handleTouchMove);
canvas.addEventListener("mouseup", stopDrawing);
canvas.addEventListener("touchend", stopDrawing);

// –§—É–Ω–∫—Ü–∏–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏—è
function startDrawing(e) {
  isDrawing = true;
  [lastX, lastY] = [e.offsetX, e.offsetY];
}

function handleTouchStart(e) {
  e.preventDefault();
  const touch = e.touches[0];
  const rect = canvas.getBoundingClientRect();
  isDrawing = true;
  [lastX, lastY] = [touch.clientX - rect.left, touch.clientY - rect.top];
}

function draw(e) {
  if (!isDrawing) return;
  const x = e.offsetX;
  const y = e.offsetY;
  ctx.beginPath();
  ctx.moveTo(lastX, lastY);
  ctx.lineTo(x, y);
  ctx.stroke();
  [lastX, lastY] = [x, y];
}

function handleTouchMove(e) {
  e.preventDefault();
  const touch = e.touches[0];
  const rect = canvas.getBoundingClientRect();
  const x = touch.clientX - rect.left;
  const y = touch.clientY - rect.top;
  if (!isDrawing) return;
  ctx.beginPath();
  ctx.moveTo(lastX, lastY);
  ctx.lineTo(x, y);
  ctx.stroke();
  [lastX, lastY] = [x, y];
}

function stopDrawing() {
  isDrawing = false;
}

// –û—á–∏—Å—Ç–∫–∞ Canvas
document.getElementById("clear-btn").addEventListener("click", () => {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
});

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ –≥—Ä—É–ø–ø—É Telegram
document.getElementById("save-btn").addEventListener("click", async () => {
  const imageData = canvas.toDataURL("image/png");
  const blob = await (await fetch(imageData)).blob();
  const formData = new FormData();

  // –ü–æ–ª—É—á–∞–µ–º chat_id –≥—Ä—É–ø–ø—ã, –æ—Ç–∫—É–¥–∞ –∑–∞–ø—É—â–µ–Ω Mini App
  const chatId = tg.initDataUnsafe.chat?.id;
  if (!chatId) {
    tg.showAlert("–ó–∞–ø—É—Å—Ç–∏—Ç–µ –º–∏–Ω–∏-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–∑ –≥—Ä—É–ø–ø—ã, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–∏—Å—É–Ω–æ–∫.");
    return;
  }

  formData.append("chat_id", chatId);
  formData.append("photo", blob, "drawing.png");

  const botToken = "7575940912:AAGZadQi6Ua0T-WwL6uL4ZZY0trR_DTbnY8"; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞!
  const apiUrl = `https://api.telegram.org/bot${botToken}/sendPhoto`;

  try {
    await fetch(apiUrl, { method: "POST", body: formData });
    tg.showAlert("–†–∏—Å—É–Ω–æ–∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω –≤ –≥—Ä—É–ø–ø—É! üéâ");
    tg.close();
  } catch (error) {
    tg.showAlert("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
  }
});